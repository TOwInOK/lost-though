name: Build and Push Docker image

on:
 push:
   branches: [ main ]

jobs:
 build:
   runs-on: ubuntu-latest

   steps:
   - name: Checkout repository
     uses: actions/checkout@v4

   - name: Cache Rust cargo registry
     id: cargo-cache
     uses: actions/cache@v3
     with:
       path: |
         ~/.cargo/registry
         ~/.cargo/git
         ./target/release/deps
       key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
       restore-keys: |
         ${{ runner.os }}-cargo-registry-
         
   - name: Check cache status
     run: |
      if [ "${{ steps.cargo-cache.outputs.cache-hit }}" != "true" ]; then
       echo "Cache not found for Rust cargo registry. A new cache will be created."
      else
       echo "Cache for Rust cargo registry was found and restored."
      fi
      
   - name: Set up QEMU
     uses: docker/setup-qemu-action@v3
     
   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3
     
   - name: Login to GitHub Container Registry
     uses: docker/login-action@v1
     with:
       registry: ghcr.io
       username: ${{ github.repository_owner }}
       password: ${{ secrets.GITHUB_TOKEN }}

   - name: Build and push Docker image
     uses: docker/build-push-action@v5
     with:
       context: .
       push: true
       platforms: linux/amd64,linux/arm64
       tags: ghcr.io/towinok/monotipe:latest,ghcr.io/towinok/monotipe:${{ github.sha }}
       cache-from: type=gha
       cache-to: type=gha,mode=max
       
